package MiniDOT.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class AttributeList_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append(" [");
    ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.attributes$nUR8)).visitAll((it) -> {
      tgs.appendNode(it);
      if (it != ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.attributes$nUR8)).last()) {
        tgs.append(", ");
      }
    });
    tgs.append("]");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink attributes$nUR8 = MetaAdapterFactory.getContainmentLink(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aea8f325L, 0x72cad682aea8f32bL, "attributes");
  }
}
