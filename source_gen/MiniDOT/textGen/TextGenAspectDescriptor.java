package MiniDOT.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenAspectBase;
import MiniDOT.structure.LanguageConceptSwitch;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.text.rt.TextGenDescriptor;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.text.rt.TextGenModelOutline;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class TextGenAspectDescriptor extends TextGenAspectBase {
  private final LanguageConceptSwitch myIndex = new LanguageConceptSwitch();

  public TextGenAspectDescriptor() {
  }

  @Nullable
  @Override
  public TextGenDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    switch (myIndex.index(concept)) {
      case LanguageConceptSwitch.Attribute:
        return new Attribute_TextGen();
      case LanguageConceptSwitch.AttributeList:
        return new AttributeList_TextGen();
      case LanguageConceptSwitch.Edge:
        return new Edge_TextGen();
      case LanguageConceptSwitch.EdgeTarget:
        return new EdgeTarget_TextGen();
      case LanguageConceptSwitch.Graph:
        return new Graph_TextGen();
      case LanguageConceptSwitch.ID:
        return new ID_TextGen();
      case LanguageConceptSwitch.Node:
        return new Node_TextGen();
    }
    return null;
  }

  @Override
  public void breakdownToUnits(@NotNull TextGenModelOutline outline) {
    for (SNode root : outline.getModel().getRootNodes()) {
      if (root.getConcept().equals(CONCEPTS.Graph$K4)) {
        String fname = getFileName_Graph(root);
        String ext = getFileExtension_Graph(root);
        outline.registerTextUnit((ext == null ? fname : (fname + '.' + ext)), getPath_Graph(root), root);
        continue;
      }
    }
  }
  private static String getFileName_Graph(SNode node) {
    return "exampleGraph";
  }
  private static String getFileExtension_Graph(SNode node) {
    return "dot";
  }
  private static String getPath_Graph(SNode node) {
    return "export";
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Graph$K4 = MetaAdapterFactory.getConcept(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda0bd04L, "MiniDOT.structure.Graph");
  }
}
