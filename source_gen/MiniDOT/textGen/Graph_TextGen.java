package MiniDOT.textGen;

/*Generated by MPS */

import jetbrains.mps.text.rt.TextGenDescriptorBase;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SProperty;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import org.jetbrains.mps.openapi.language.SConcept;

public class Graph_TextGen extends TextGenDescriptorBase {
  @Override
  public void generateText(final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    if (SPropertyOperations.getBoolean(ctx.getPrimaryInput(), PROPS.strict$nGHZ)) {
      tgs.append("strict ");
    }
    if (SPropertyOperations.getBoolean(ctx.getPrimaryInput(), PROPS.directional$qSEe)) {
      tgs.append("digraph ");
    } else {
      tgs.append("graph ");
    }
    if (isNotEmptyString(SPropertyOperations.getString(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.graphId$8Jn8), PROPS.ID$$XTe))) {
      tgs.appendNode(SLinkOperations.getTarget(ctx.getPrimaryInput(), LINKS.graphId$8Jn8));
      tgs.append(" ");
    }
    tgs.append("{");
    tgs.newLine();
    ListSequence.fromList(SLinkOperations.getChildren(ctx.getPrimaryInput(), LINKS.stmt$6piV)).visitAll((it) -> {
      if (!(SNodeOperations.isInstanceOf(it, CONCEPTS.SingleLineComment$ZP))) {
        tgs.append("    ");
        tgs.appendNode(it);
        tgs.append(";");
        tgs.newLine();
      }
    });
    tgs.append("}");
  }
  private static boolean isNotEmptyString(String str) {
    return str != null && str.length() > 0;
  }

  private static final class PROPS {
    /*package*/ static final SProperty strict$nGHZ = MetaAdapterFactory.getProperty(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda0bd04L, 0x26d76f9229f03a1bL, "strict");
    /*package*/ static final SProperty directional$qSEe = MetaAdapterFactory.getProperty(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda0bd04L, 0x53ff9463eda0bd05L, "directional");
    /*package*/ static final SProperty ID$$XTe = MetaAdapterFactory.getProperty(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda14812L, 0x53ff9463eda14813L, "ID");
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink graphId$8Jn8 = MetaAdapterFactory.getContainmentLink(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda0bd04L, 0x53ff9463eda14816L, "graphId");
    /*package*/ static final SContainmentLink stmt$6piV = MetaAdapterFactory.getContainmentLink(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda0bd04L, 0x53ff9463eda9f516L, "stmt");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept SingleLineComment$ZP = MetaAdapterFactory.getConcept(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aebbcab7L, "MiniDOT.structure.SingleLineComment");
  }
}
