package MiniDOT.behavior;

/*Generated by MPS */

import jetbrains.mps.core.aspects.behaviour.BaseBehaviorAspectDescriptor;
import jetbrains.mps.core.aspects.behaviour.api.BHDescriptor;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.lang.smodel.ConceptSwitchIndex;
import jetbrains.mps.lang.smodel.ConceptSwitchIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;

public final class BehaviorAspectDescriptor extends BaseBehaviorAspectDescriptor {
  private final BHDescriptor myStatement__BehaviorDescriptor = new Statement__BehaviorDescriptor();
  private final BHDescriptor myAttributeList__BehaviorDescriptor = new AttributeList__BehaviorDescriptor();
  private final BHDescriptor myEdgeTarget__BehaviorDescriptor = new EdgeTarget__BehaviorDescriptor();

  public BehaviorAspectDescriptor() {
  }

  @Nullable
  public BHDescriptor getDescriptor(@NotNull SAbstractConcept concept) {
    SAbstractConcept cncpt = concept;
    switch (conceptIndex.index(cncpt)) {
      case 0:
        return myAttributeList__BehaviorDescriptor;
      case 1:
        return myEdgeTarget__BehaviorDescriptor;
      case 2:
        return myStatement__BehaviorDescriptor;
      default:
    }
    return null;
  }
  private static final ConceptSwitchIndex conceptIndex = new ConceptSwitchIndexBuilder().put(MetaIdFactory.conceptId(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aea8f325L), MetaIdFactory.conceptId(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aeab60abL), MetaIdFactory.conceptId(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda9f514L)).seal();
}
