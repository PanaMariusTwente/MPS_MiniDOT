package MiniDOT.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptAttributeList = createDescriptorForAttributeList();
  /*package*/ final ConceptDescriptor myConceptEdge = createDescriptorForEdge();
  /*package*/ final ConceptDescriptor myConceptEdgeTarget = createDescriptorForEdgeTarget();
  /*package*/ final ConceptDescriptor myConceptGraph = createDescriptorForGraph();
  /*package*/ final ConceptDescriptor myConceptID = createDescriptorForID();
  /*package*/ final ConceptDescriptor myConceptNode = createDescriptorForNode();
  /*package*/ final ConceptDescriptor myConceptSingleLineComment = createDescriptorForSingleLineComment();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAttribute, myConceptAttributeList, myConceptEdge, myConceptEdgeTarget, myConceptGraph, myConceptID, myConceptNode, myConceptSingleLineComment, myConceptStatement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Attribute:
        return myConceptAttribute;
      case LanguageConceptSwitch.AttributeList:
        return myConceptAttributeList;
      case LanguageConceptSwitch.Edge:
        return myConceptEdge;
      case LanguageConceptSwitch.EdgeTarget:
        return myConceptEdgeTarget;
      case LanguageConceptSwitch.Graph:
        return myConceptGraph;
      case LanguageConceptSwitch.ID:
        return myConceptID;
      case LanguageConceptSwitch.Node:
        return myConceptNode;
      case LanguageConceptSwitch.SingleLineComment:
        return myConceptSingleLineComment;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      default:
        return null;
    }
  }


  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MiniDOT", "Attribute", 0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda1480dL);
    b.class_(false, false, false);
    b.origin("r:e35f08fc-b375-484b-ad86-33df2dbf9619(MiniDOT.structure)/6052719581118679053");
    b.version(3);
    b.aggregate("attributeId", 0x53ff9463eda14814L).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda14812L).optional(false).ordered(true).multiple(false).origin("6052719581118679060").done();
    b.aggregate("value", 0x53ff9463eda14d6fL).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda14812L).optional(false).ordered(true).multiple(false).origin("6052719581118680431").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttributeList() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MiniDOT", "AttributeList", 0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aea8f325L);
    b.class_(false, false, false);
    b.origin("r:e35f08fc-b375-484b-ad86-33df2dbf9619(MiniDOT.structure)/8271659522383737637");
    b.version(3);
    b.aggregate("attributes", 0x72cad682aea8f32bL).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda1480dL).optional(true).ordered(true).multiple(true).origin("8271659522383737643").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEdge() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MiniDOT", "Edge", 0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda14807L);
    b.class_(false, false, false);
    // extends: MiniDOT.structure.Statement
    b.super_(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda9f514L);
    b.origin("r:e35f08fc-b375-484b-ad86-33df2dbf9619(MiniDOT.structure)/6052719581118679047");
    b.version(3);
    b.aggregate("sourceId", 0x53ff9463eda14819L).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda14812L).optional(false).ordered(true).multiple(false).origin("6052719581118679065").done();
    b.aggregate("targetIds", 0x53ff9463eda17b17L).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aeab60abL).optional(false).ordered(true).multiple(true).origin("6052719581118692119").done();
    b.aggregate("attributes", 0x53ff9463eda14810L).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aea8f325L).optional(true).ordered(true).multiple(false).origin("6052719581118679056").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEdgeTarget() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MiniDOT", "EdgeTarget", 0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aeab60abL);
    b.class_(false, false, false);
    b.origin("r:e35f08fc-b375-484b-ad86-33df2dbf9619(MiniDOT.structure)/8271659522383896747");
    b.version(3);
    b.aggregate("targetId", 0x72cad682aeab60aeL).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda14812L).optional(false).ordered(true).multiple(false).origin("8271659522383896750").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForGraph() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MiniDOT", "Graph", 0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda0bd04L);
    b.class_(false, false, true);
    b.origin("r:e35f08fc-b375-484b-ad86-33df2dbf9619(MiniDOT.structure)/6052719581118643460");
    b.version(3);
    b.property("strict", 0x26d76f9229f03a1bL).type(PrimitiveTypeId.BOOLEAN).origin("2798828366993570331").done();
    b.property("directional", 0x53ff9463eda0bd05L).type(PrimitiveTypeId.BOOLEAN).origin("6052719581118643461").done();
    b.property("commaSeparators", 0x72cad682aeb1e423L).type(PrimitiveTypeId.BOOLEAN).origin("8271659522384323619").done();
    b.property("semicolonSeparators", 0x72cad682aeb1e424L).type(PrimitiveTypeId.BOOLEAN).origin("8271659522384323620").done();
    b.aggregate("graphId", 0x53ff9463eda14816L).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda14812L).optional(true).ordered(true).multiple(false).origin("6052719581118679062").done();
    b.aggregate("stmt", 0x53ff9463eda9f516L).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda9f514L).optional(true).ordered(true).multiple(true).origin("6052719581119247638").done();
    b.aggregate("singleLineComment", 0x72cad682aebbcabbL).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aebbcab7L).optional(true).ordered(true).multiple(false).origin("8271659522384972475").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForID() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MiniDOT", "ID", 0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda14812L);
    b.class_(false, false, false);
    b.origin("r:e35f08fc-b375-484b-ad86-33df2dbf9619(MiniDOT.structure)/6052719581118679058");
    b.version(3);
    b.property("ID", 0x53ff9463eda14813L).type(PrimitiveTypeId.STRING).origin("6052719581118679059").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNode() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MiniDOT", "Node", 0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda14806L);
    b.class_(false, false, false);
    // extends: MiniDOT.structure.Statement
    b.super_(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda9f514L);
    b.origin("r:e35f08fc-b375-484b-ad86-33df2dbf9619(MiniDOT.structure)/6052719581118679046");
    b.version(3);
    b.aggregate("nodeId", 0x53ff9463eda14815L).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda14812L).optional(false).ordered(true).multiple(false).origin("6052719581118679061").done();
    b.aggregate("attributes", 0x53ff9463eda14811L).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aea8f325L).optional(true).ordered(true).multiple(false).origin("6052719581118679057").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSingleLineComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MiniDOT", "SingleLineComment", 0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aebbcab7L);
    b.class_(false, false, false);
    // extends: MiniDOT.structure.Statement
    b.super_(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda9f514L);
    b.origin("r:e35f08fc-b375-484b-ad86-33df2dbf9619(MiniDOT.structure)/8271659522384972471");
    b.version(3);
    b.property("text", 0x72cad682aebbcab9L).type(PrimitiveTypeId.STRING).origin("8271659522384972473").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("MiniDOT", "Statement", 0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x53ff9463eda9f514L);
    b.class_(false, false, false);
    b.origin("r:e35f08fc-b375-484b-ad86-33df2dbf9619(MiniDOT.structure)/6052719581119247636");
    b.version(3);
    b.aggregate("singleLineComment", 0x72cad682aec084f4L).target(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL, 0x72cad682aebbcab7L).optional(true).ordered(true).multiple(false).origin("8271659522385282292").done();
    return b.create();
  }
}
