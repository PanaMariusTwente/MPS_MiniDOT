package MiniDOT.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Attribute = 0;
  public static final int AttributeList = 1;
  public static final int Edge = 2;
  public static final int EdgeTarget = 3;
  public static final int Graph = 4;
  public static final int ID = 5;
  public static final int Node = 6;
  public static final int SingleLineComment = 7;
  public static final int Statement = 8;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x19ed932bf9694b45L, 0x993fc50c3cc8fe5cL);
    builder.put(0x53ff9463eda1480dL, Attribute);
    builder.put(0x72cad682aea8f325L, AttributeList);
    builder.put(0x53ff9463eda14807L, Edge);
    builder.put(0x72cad682aeab60abL, EdgeTarget);
    builder.put(0x53ff9463eda0bd04L, Graph);
    builder.put(0x53ff9463eda14812L, ID);
    builder.put(0x53ff9463eda14806L, Node);
    builder.put(0x72cad682aebbcab7L, SingleLineComment);
    builder.put(0x53ff9463eda9f514L, Statement);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
